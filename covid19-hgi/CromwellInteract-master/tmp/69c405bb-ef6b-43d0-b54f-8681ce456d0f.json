{"workflowName":"format","workflowProcessingEvents":[{"cromwellId":"cromid-c0c1e5a","description":"Finished","timestamp":"2022-04-06T09:15:21.559Z","cromwellVersion":"53-fc98e98"},{"cromwellId":"cromid-c0c1e5a","description":"PickedUp","timestamp":"2022-04-06T09:15:16.360Z","cromwellVersion":"53-fc98e98"}],"metadataSource":"Unarchived","actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version 1.0\n\nworkflow format {\n\n    input {\n        File sumstats_loc\n        Array[Array[String]] summary_stats = read_tsv(sumstats_loc)\n    }\n\n    scatter (i in range(length(summary_stats))) {\n        call formatting {\n            input: summary_stat = summary_stats[i][0], format_info = summary_stats[i][1]\n        }\n    }\n\n    output {\n        Array[File] formated_sumstats = formatting.out\n    }\n}\n\n# Filter bad quality variants\ntask formatting {\n\n    input {\n        File summary_stat\n\n        String docker\n        String format_info\n\tString outfile = sub(basename(summary_stat, \".gz\"), \"\\\\.bgz$\", \"\") + \".formatted.gz\"\n  }\n\n    command <<<\n\n        set -eux\n\n        echo \"GWAS formatting\"\n        echo \"~{summary_stat}\"\n        echo \"\"\n\n        catcmd=\"cat\"\n        if [[ ~{summary_stat} == *.gz ]] || [[ ~{summary_stat} == *.bgz ]]\n        then\n            catcmd=\"zcat\"\n        fi\n\n        if [[ ~{format_info} == \"SAIGE\" ]]\n        then\n          $catcmd ~{summary_stat} | bgzip > ~{outfile}\n        fi\n\n        if [[ ~{format_info} == \"EXCEED\" ]]\n        then\n          $catcmd ~{summary_stat} | awk 'BEGIN {OFS=\"\\t\"}\n          NR==1 {for(i=1;i<=NF;i++) a[$i]=i; print \"CHR\",\"POS\",\"Allele1\",\"Allele2\",\"AF_Allele2\",\"imputationInfo\",\"BETA\",\"SE\",\"p.value\",\"N\"}\n          NR >1 {print $a[\"CHR\"],$a[\"BP\"],$a[\"Allele1\"],$a[\"Allele2\"],$a[\"AF_Allele2\"],$a[\"imputationInfo\"],$a[\"BETA\"],$a[\"SE\"],$a[\"P\"],$a[\"N\"]}' | \\\n          bgzip -@4 > ~{outfile}\n        fi\n\n        if [[ ~{format_info} == \"REGENIE\" ]]\n        then\n          $catcmd ~{summary_stat} | awk 'BEGIN {OFS=\"\\t\"}\n          NR==1 {for(i=1;i<=NF;i++) a[$i]=i; print \"CHR\",\"POS\",\"Allele1\",\"Allele2\",\"AF_Allele2\",\"imputationInfo\",\"BETA\",\"SE\",\"p.value\",\"N\"}\n          NR >1 && $14 != \"TEST_FAIL\" {print $a[\"CHROM\"],$a[\"GENPOS\"],$a[\"ALLELE0\"],$a[\"ALLELE1\"],$a[\"A1FREQ\"],$a[\"INFO\"],$a[\"BETA\"],$a[\"SE\"],10^-$a[\"LOG10P\"],$a[\"N\"]}' | \\\n          bgzip -@4 > ~{outfile}\n        fi\n\n\n        if [[ ~{format_info} == \"JAPAN\" ]]\n        then\n          $catcmd ~{summary_stat} | awk 'BEGIN {OFS=\"\\t\"}\n          NR==1 {for(i=1;i<=NF;i++) a[$i]=i; print \"CHR\",\"POS\",\"Allele1\",\"Allele2\",\"AF_Allele2\",\"imputationInfo\",\"BETA\",\"SE\",\"p.value\",\"N\"}\n          NR >1 {print $a[\"CHR\"],$a[\"POS\"],$a[\"Allele1\"],$a[\"Allele2\"],$a[\"AF_Allele2\"],$a[\"imputationInfo\"],$a[\"BETA\"],$a[\"SE\"],$a[\"p.value\"],$a[\"N.Cases\"]+$a[\"N.Controls\"]}' | \\\n          bgzip -@4 > ~{outfile}\n        fi\n\n        if [[ ~{format_info} == \"PMBB\" ]]\n        then\n          $catcmd ~{summary_stat} | awk 'BEGIN {OFS=\"\\t\"}\n          NR==1 {for(i=1;i<=NF;i++) a[$i]=i; print \"CHR\",\"POS\",\"Allele1\",\"Allele2\",\"AF_Allele2\",\"imputationInfo\",\"BETA\",\"SE\",\"p.value\",\"N\"}\n          NR >1 {print $a[\"#CHROM\"],$a[\"POS\"],$a[\"ALLELE0\"],$a[\"ALLELE1\"],$a[\"A1FREQ\"],$a[\"INFO\"],$a[\"BETA\"],$a[\"SE\"],10^-$a[\"LOG10P\"],$a[\"N\"]}' | \\\n          bgzip -@4 > ~{outfile}\n        fi\n\n        if [[ ~{format_info} == \"US\" ]]\n        then\n          $catcmd ~{summary_stat} | awk 'BEGIN {OFS=\"\\t\"}\n          NR==1 {for(i=1;i<=NF;i++) a[$i]=i; print \"CHR\",\"POS\",\"Allele1\",\"Allele2\",\"AF_Allele2\",\"imputationInfo\",\"BETA\",\"SE\",\"p.value\",\"N\"}\n          NR >1 {print $a[\"CHR\"],$a[\"POS\"],$a[\"Allele1\"],$a[\"Allele2\"],$a[\"AF_Allele2\"],$a[\"imputationInfo\"],$a[\"Beta\"],$a[\"SE\"],$a[\"p.value\"],$a[\"N\"]}' | \\\n          bgzip -@4 > ~{outfile}\n        fi\n\n        if [[ ~{format_info} == \"HELIX\" ]]\n        then\n          $catcmd ~{summary_stat} | awk 'BEGIN {FS=OFS=\"\\t\"}\n          NR==1 {for(i=1;i<=NF;i++) a[$i]=i; print \"CHR\",\"POS\",\"Allele1\",\"Allele2\",\"AF_Allele2\",\"imputationInfo\",\"BETA\",\"SE\",\"p.value\",\"N\"}\n          NR >1 {split($22,b,\";|=\"); print $a[\"Chr\"],$a[\"Pos\"],$a[\"Ref\"],$a[\"Alt\"],$a[\"AAF\"],b[6],b[2],b[4],$a[\"Pval\"],($a[\"Num_Cases\"]+$a[\"Num_Controls\"])}' | \\\n          awk '$8 != \"NA\" && $9 != \"NA\"' | \\\n          bgzip -@4 > ~{outfile}\n        fi\n\n        if [[ ~{format_info} == \"GENOTEK\" ]]\n        then\n          $catcmd ~{summary_stat} | awk 'BEGIN {OFS=\"\\t\"}\n          NR==1 {for(i=1;i<=NF;i++) a[$i]=i; print \"CHR\",\"POS\",\"Allele1\",\"Allele2\",\"AF_Allele2\",\"imputationInfo\",\"BETA\",\"SE\",\"p.value\",\"N\"}\n          NR >1 {print $a[\"CHR\"],$a[\"POS\"],$a[\"Allele1\"],$a[\"Allele2\"],$a[\"AF_Allele2\"],$a[\"imputationInfo\"],$a[\"Beta\"],$a[\"SE\"],$a[\"p.value\"],$a[\"N.Cases\"]+$a[\"N.Controls\"]}' | \\\n          bgzip -@4 > ~{outfile}\n        fi\n\n        echo \"`date` done\"\n\n    >>>\n\n    output {\n        File out = sub(basename(summary_stat, \".gz\"), \"\\\\.bgz$\", \"\") + \".formatted.gz\"\n    }\n\n    runtime {\n        docker: \"~{docker}\"\n        cpu: \"1\"\n        memory: \"2 GB\"\n        disks: \"local-disk \" + 5*ceil(size(summary_stat, \"G\")) + \" HDD\"\n        zones: \"us-central1-b\"\n        preemptible: 2\n        noAddress: true\n    }\n}\n\n","root":"","options":"{\n\n}","inputs":"{\"format.formatting.docker\":\"gcr.io/long-covid-hg/bioinformatics:0.7\",\"format.sumstats_loc\":\"gs://long-covid-hg-cromwell/20220331/conf/step1_format.txt\"}","workflowUrl":"","labels":"{}"},"calls":{"format_info":[{"retryableFailure":false,"executionStatus":"Failed","shardIndex":0,"failures":[{"causedBy":[],"message":"Failed to evaluate 'format_info' (reason 1 of 1): Evaluating __summary_stats[i][1] failed: Bad array access __summary_stats[i][1]: Array size 1 does not have an index value '1'"}],"end":"2022-04-06T09:15:20.543Z","attempt":1},{"retryableFailure":false,"executionStatus":"Failed","shardIndex":1,"failures":[{"message":"Failed to evaluate 'format_info' (reason 1 of 1): Evaluating __summary_stats[i][1] failed: Bad array access __summary_stats[i][1]: Array size 1 does not have an index value '1'","causedBy":[]}],"end":"2022-04-06T09:15:20.539Z","attempt":1},{"retryableFailure":false,"executionStatus":"Failed","shardIndex":2,"failures":[{"causedBy":[],"message":"Failed to evaluate 'format_info' (reason 1 of 1): Evaluating __summary_stats[i][1] failed: Bad array access __summary_stats[i][1]: Array size 1 does not have an index value '1'"}],"end":"2022-04-06T09:15:20.540Z","attempt":1},{"retryableFailure":false,"executionStatus":"Failed","shardIndex":3,"failures":[{"causedBy":[],"message":"Failed to evaluate 'format_info' (reason 1 of 1): Evaluating __summary_stats[i][1] failed: Bad array access __summary_stats[i][1]: Array size 1 does not have an index value '1'"}],"end":"2022-04-06T09:15:20.541Z","attempt":1}]},"outputs":{},"workflowRoot":"gs://long-covid-hg-cromwell/format/69c405bb-ef6b-43d0-b54f-8681ce456d0f/","actualWorkflowLanguage":"WDL","id":"69c405bb-ef6b-43d0-b54f-8681ce456d0f","inputs":{"format.formatting.docker":"gcr.io/long-covid-hg/bioinformatics:0.7","sumstats_loc":"gs://long-covid-hg-cromwell/20220331/conf/step1_format.txt","summary_stats":null,"format.formatting.outfile":null},"labels":{"cromwell-workflow-id":"cromwell-69c405bb-ef6b-43d0-b54f-8681ce456d0f"},"submission":"2022-04-06T09:15:16.126Z","status":"Failed","failures":[{"causedBy":[{"causedBy":[],"message":"Failed to evaluate 'format_info' (reason 1 of 1): Evaluating __summary_stats[i][1] failed: Bad array access __summary_stats[i][1]: Array size 1 does not have an index value '1'"},{"causedBy":[],"message":"Failed to evaluate 'format_info' (reason 1 of 1): Evaluating __summary_stats[i][1] failed: Bad array access __summary_stats[i][1]: Array size 1 does not have an index value '1'"},{"causedBy":[],"message":"Failed to evaluate 'format_info' (reason 1 of 1): Evaluating __summary_stats[i][1] failed: Bad array access __summary_stats[i][1]: Array size 1 does not have an index value '1'"},{"causedBy":[],"message":"Failed to evaluate 'format_info' (reason 1 of 1): Evaluating __summary_stats[i][1] failed: Bad array access __summary_stats[i][1]: Array size 1 does not have an index value '1'"}],"message":"Workflow failed"}],"end":"2022-04-06T09:15:21.559Z","start":"2022-04-06T09:15:16.361Z"}